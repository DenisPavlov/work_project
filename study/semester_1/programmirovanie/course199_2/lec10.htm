<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE></TITLE>
<style type="text/css">
p {
margin:0cm;
margin-bottom:.0001pt;
text-align:justify;
text-indent:35.45pt;
mso-pagination:widow-orphan;
font-size:12.0pt;
font-family:"arial";
mso-fareast-font-family:"arial";
}
.code{font-family:"Courier New";font-size:10pt}
</style>
</HEAD>
<BODY>
<basefont face=arial size=3>
<B></B>
<table border="0" cellpadding="0" cellspacing="0" width="100%"
 height="31">
<TR>
 <TD width="100%" bgcolor="#000000"><div align=right><font color="#FFFFFF" size=3 face=Arial><b>Программирование
 на языках высокого уровня. Язык программирования Паскаль&nbsp;</b></font></div></td>
</TR>
</table>
<table border="0" cellpadding="2" cellspacing="0" width="100%" height="35">
<TR>
 <TD width="486" bgcolor=gray height="26">
<P align=right>&nbsp;</p>
 </td>
 <TD width="230" bgcolor="#EEE0BF" height="26"><p align=center><font size=2 face=Arial color="#0000FF"><a href="P6.htm">
</a><a href="lec9.htm">назад</a> | <a href="index_lec.htm">оглавление</a>
| <a href="pril1.htm"> вперёд</a></font></p>
 </td>
 <TD width="43" height="26">&nbsp;</td>
</TR>
</table><br>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<TR>
 <TD>
 <P><b>10. Интегрированная среда Турбо Паскаля</b></P>
 <P></P>
 <DIR>
 <P>Система программирования Турбо Паскаль представляет собой
 интегрированную среду разработки, включающую в себя:</P>
 </DIR>
 <OL>
<OL>
 <LI>экранный редактор</LI>
 <LI>компилятор</LI>
 <LI>редактор связей</LI>
 <LI>отладчик</LI>
 <LI>справочную подсистему</LI>
 </OL>
</OL>
<P></P>
<P>&nbsp;</P>
<P><b><u><a name="10_1"></a>10.1 Как начать работу с Турбо Паскалем</u></b></P>
<P>&nbsp;</P>
<P>Система Турбо Паскаль довольно значительна по объему.
 Она поставляется на нескольких дистрибутивных дискетах и устанавливается
 на жесткий диск. При развертывании системы на жестком диске обычно создается
 каталог с именем <I>ТР</I> (или <I>PAS, TURBOPAS, PASCAL</I> и т.п.),
 в который помещаются все файлы с дистрибутивных дискет. Для вызова Турбо
 Паскаля необходимо отыскать в древовидной структуре каталогов ПК этот
 каталог и в нем файл <I>TURBO.EXE</I>. Этот файл содержит готовую к работе
 диалоговую систему программирования Турбо Паскаль. В него входят минимально
 необходимые части Турбо Паскаля (текстовый редактор, компилятор, компоновщик,
 загрузчик). Для нормальной работы в диалоговой среде понадобятся также
 основная библиотека, располагающаяся в файле <I>TURBO. TPL</I>, и справочная
 служба (файл <I>TURBO.HLP</I>). В принципе, этих файлов достаточно для
 написания, компиляции и исполнения большинства примеров, содержащихся
 в этой книге.</P>
<P>Пусть перечисленные файлы располагаются в каталоге <I>ТР</I>
 на диске <I>D</I>. Тогда для вызова Турбо Паскаля следует дать команду:
</P>
<P>D:\TP\TURBO </P>
<P>По этой команде операционная система <I>MS-DOS</I> поставит
 на исполнение программу из файла <I>TURBO.EXE</I>: загрузит программу
 в оперативную память и передаст ей управление.</P>
<P></P>
<P>Не рекомендуется работать с системой, назначив в качестве
 каталога по умолчанию (текущего каталога) тот, в котором хранятся перечисленные
 выше файлы (этот каталог будем называть системным). Во-первых, в таком
 случае можно ошибочно стереть какой-либо из файлов системы программирования
 и тем самым нарушить ее работоспособность, а во-вторых, этот каталог очень
 скоро заполнится другими файлами, прямо не относящимися к Турбо Паскалю.
</P>
<P>После успешного вызова системы экран ПК приобретает вид,
 показанный на рис. 1 (верхняя строка со словом Авто может отсутствовать)
</P>
<P><img src="img/tp.gif" width="550" height="345"></P>
<P><B>Рис. 1 </b> Вид экрана после вызова Турбо Паскаля</P>
<P>Сразу же скажем, что для выхода из Турбо Паскаля следует
 нажать клавишу <I>Alt </I>и, не отпуская ее, - клавишу с латинской буквой
 <I>X</I>, после чего можно отпустить обе клавиши.</P>
<P>&nbsp;</P>
<P><b><U>!!!Совет:</u> чтобы лучше ознакомиться с работой
 в среде Турбо Паскаля, рекомендую запустить систему, выбрать из лекций
 какой-нибудь пример программы, и далее не просто читать текст, а сразу
 пытаться применить на практикке.</b></P>
<P>&nbsp;</P>
<P>Верхняя строка содержит “меню” возможных режимов работы
 Турбо Паскаля, нижняя - краткую справку о назначении основных функциональных
 клавиш. Вся остальная часть экрана принадлежит окну редактора, очерченному
 двойной рамкой и предназначенному для ввода и коррекции текстов программ.
 В его верхней строке приводятся имя того дискового файла, откуда был прочитан
 текст программы (новому файлу присваивается имя <I>NONAME00.PAS</I>),
 два специальных поля, используемых при работе с устройством “мышь” (эти
 поля выделены квадратными скобками), и цифра 2 - номер окна. В Турбо Паскале
 можно работать одновременно с несколькими программами (или частями одной
 крупной программы), каждая из которых может располагаться в отдельном
 окне редактора. Среда позволяет использовать до 9-ти окон редактора одновременно (см. п. 10.2) </P>
<P>Кроме окна (окон) редактора в Турбо Паскале используются
 также окна отладочного режима, вывода результатов работы программы, справочной
 службы, стека, регистров. По желанию они могут вызываться на экран поочередно
 или присутствовать на нем одновременно.</P>
<P>&nbsp;</P>
<P>&nbsp;<B>Функциональные клавиши </b></P>
<P>Функциональные клавиши используются для управления средой
 Турбо Паскаля. Они обозначаются F1, F2, ..., F12 и располагаются в самом
 верхнем ряду клавиатуры. С каждой из этих клавиш связывается некоторая
 команда меню. Действие почти всех функциональных клавиш можно модифицировать
 тремя особыми клавишами: <I>Alt </I>(от <I>ALTernative</I> - <I>дополнительный</I>),
<I>Ctrl</I> (<I>ConTRoL</I> -<I>управляющий</I>) и <I>Shift</I> (<I>SHIFT</I>-
<I>сдвиговый</I>). Эти клавиши используются подобно клавиши временной
 смены регистра на пишущей машинке: нужно нажать на одну из них и затем,
 не отпуская ее, нажать функциональную клавишу. В дальнейшем такое совместное
 нажатие двух клавиш будем обозначать чертой. Например, <I>Alt-F3</I> означает,
 что вместе с клавишей <I>Alt</I> необходимо нажать клавишу <I>F3</I>,
<I>Ctrl-F9</I> - вместе с <I>Ctrl</I> нажимается F9 и т.д.</P>
<P>Ниже приводятся команды, которые передаются среде Турбо
 Паскаля функциональными клавишами и некоторыми их комбинациями с клавишами
 <I>Ctrl </I>и <I>Alt</I>: </P>
<P>Fl - обратиться за справкой к встроенной справочной службе
 (<I>Help</I>-помощь);</P>
<P>F2 - записать редактируемый текст в дисковый файл;</P>
<P>F3 - прочитать текст из дискового файла в окно редактора;
</P>
<P>F4 - используется в отладочном режиме: начать (или продолжить)
 исполнение программы и остановиться перед исполнением той ее строки, на
 которой стоит курсор;</P>
<P>F7 - используется в отладочном режиме: выполнить следующую
 строку программы; если в строке есть обращение к процедуре (функции),
 войти в эту процедуру и остановиться перед исполнением первого ее оператора;
</P>
<P>F8- используется в отладочном режиме: выполнить следующую
 строку программы; если в строке есть обращение к процедуре (функции),
 исполнить ее и не прослеживать ее работу;</P>
<P>F5 - распахнуть активное окно на весь экран;</P>
<P>F6 - сделать активным следующее окно;</P>
<P>F9 - компилировать программу, но не выполнять ее;</P>
<P>F10 - перейти к диалоговому выбору режима работы с помощью
 главного меню;</P>
<P>Ctrl-F9 - выполнить прогон программы: компилировать программу,
 находящуюся в редакторе, загрузить ее в оперативную память и выполнить,
 после чего вернуться в среду Турбо Паскаля.</P>
<P>Alt-F5 - сменить окно редактора на окно вывода результатов
 работы (прогона) программы.</P>
<P>Подробнее об этих командах см. в методических указаниях
 к лабораторным работам, а сейчас самый краткий комментарий.</P>
<P>Во-первых, Вам понадобятся команды Ctrl-F9 для проверки
 работы Вашей программы и <I>Alt-X</I> - для выхода из Турбо Паскаля. Клавиши
 F2 и F3 помогут Вам в работе с Вашим каталогом. Командой <I>Alt-F5</I>
 Вы в любой момент сможете просмотреть данные, выданные на экран в результате
 прогона программы.</P>
<P>&nbsp;</P>
<P>&nbsp;<B>Текстовый редактор </b></P>
<P>Текстовый редактор среды Турбо Паскаля предоставляет
 пользователю удобные средства создания и редактирования текстов программ.
 Признаком того, что среда находится в состоянии редактирования, является
 наличие в окне редактора курсора -небольшого мигающего прямоугольника.
 Режим редактирования автоматически устанавливается сразу после загрузки
 Турбо Паскаля. Из режима редактирования можно перейти к любому другому
 режиму работы Турбо Паскаля с помощью функциональных клавиш или выбора
 нужного режима из главного меню. Если среда находится в состоянии выбора
 из меню, курсор исчезает, а в строке меню появляется цветной указатель-прямоугольник,
 выделяющий одно из кодовых слов (опций меню). Для перехода от состояния
 выбора режима из главного меню в состояние редактирования нужно нажать
 клавишу <I>Esc</I> (<I>ESCape</I> - <I>ускользать, убегать</I>), а для
 перехода к выбору из главного меню - F10.</P>
<P>Рассмотрим основные приемы работы с текстовым редактором.
</P>
<P>Для создания текста программы нужно ввести этот текст
 с помощью клавиатуры ПК подобно тому, как это делается при печатании текста
 на пишущей машинке. После заполнения очередной строки следует нажать на
 клавишу <I>Enter</I>, чтобы перевести курсор на следующую строку (курсор
 всегда показывает то место на экране, куда будет помещен очередной вводимый
 символ программы).</P>
 <P>Окно редактора имитирует длинный и достаточно широкий
 лист бумаги, фрагмент которого виден в окне. Если курсор достиг нижнего
 края, осуществляется прокрутка окна редактора: его содержимое смещается
 вверх на одну строку и снизу появляется новая строка листа. Если курсор
 достиг правой границы экрана, окно начинает по мере ввода символов смещаться
 вправо, показывая правый край листа. Размеры листа по горизонтали и вертикали
 ограничиваются только общим числом символов в файле, которых не должно
 быть больше 64535, однако компилятор Турбо Паскаля воспринимает строки
 программы длиной не более 126 символов.</P>
<P>Окно можно смещать относительно листа с помощью следующих
 клавиш: </P>
<P><I>Page Up</i> -на страницу вверх;</P>
<P><I>Page Down</i> - на страницу вниз;</P>
<P><I>Ноте</i> - в начало текущей строки;</P>
<P><I>End</i> - в конец текущей строки;</P>
<P><I>Ctrl-Page Up</i> -в начало текста;</P>
<P><I>Ctrl-Page Down</i> - в конец текста.</P>
<P>Клавишами перевода курсора (эти клавши помечены стрелками
 и располагаются в правой части клавиатуры) его можно смещать по экрану.
 При достижении границ окна оно смещается на строку Или на символ.</P>
<P>Если Вы ошиблись при вводе очередного символа, его можно
 стереть с помощью клавиши со стрелкой (или надписью <I>Backspace</I>),
 расположенной над клавишей <I>Enter</I>. Клавиша <I>Delete</I> стирает
 символ, на который в данный момент указывает курсор, а команда <I>Ctrl-Y</I>-
 всю строку, на которой расположен курсор.</P>
<P>Следует помнить, что редактор Турбо Паскаля вставляет
 в конце каждой строки невидимый символ-разделитель. Этот символ вставляется
 клавишей <I>Enter</I>, а стирается клавишами <I>Backspace</I> или <I>Delete</I>.
 С помощью вставки/стирания разделителя можно “разрезать”/“склеить” строки.
 Чтобы разрезать строку, следует подвести курсор к нужному месту и нажать
 <I>Enter</I>, чтобы склеить соседние строки, нужно установить курсор в
 конец первой строки (для этого удобно использовать клавишу <I>End</I>)
 и нажать <I>Delete</I> или установит курсор в начало второй строки (клавишей
<I>Ноте</I>) и нажать <I>Backspace.</I></P>
<P>Нормальный режим работы редактора - режим вставки, в
 котором каждый вновь вводимый символ как бы “раздвигает” текст на экране,
 смещая вправо остаток строки. Следует учитывать, что разрезание текста
 и последующая вставка пропущенных строк возможны только в этом режиме.
 Редактор может также работать в режиме наложения новых символов на существующий
 старый текст: в этом режиме новый символ заменяет собой тот символ, на
 который указывает курсор, а остаток строки не смещается вправо. Для перехода
 к режиму наложения нужно нажать клавишу <I>Insert</I>, а если нажать эту
 клавишу еще раз, вновь устанавливается режим вставки. Признаком того,
 в каком режиме работает редактор, является форма курсора: в режиме вставки
 он похож на мигающий символ подчеркивания, а в режиме наложения он представляет
 собой крупный мигающий прямоугольник, заслоняющий символ целиком.</P>
<P>И еще об одной возможности редактора. Обычно редактор
 работает в режиме автоотступа. В этом режиме каждая новая строка начинается
 в той же позиции на экране, что и предыдущая. Режим автоотступа поддерживает
 хороший стиль оформления текста программы: отступы от левого края выделяют
 тело условного или составного оператора и делают программу более наглядной.
 Отказаться от автоотступа можно командой <I>Ctrl-O I </I>(<B>при нажатой
<I>Ctrl</I> :</B> нажимается сначала клавиша с латинской буквой <I>О</I>,
 а затем <I>О</I> отпускается и нажимается <I>I </I>), повторная команда
<I>Ctrl-O I</I> восстановит режим автоотступа.</P>
<P>Ниже перечислены наиболее часто используемые команды
 редактор Турбо Паскаля.&nbsp;</P>
<P>&nbsp;</P>
<P><b>Смешение курсора</b></P>
<P><I>Page Up</i> -на страницу вверх;</P>
<P><I>Page Down</i> - на страницу вниз;</P>
<P><I>Ноте</i> - в начало текущей строки;</P>
<P><I>End</i> - в конец текущей строки;</P>
<P><I>Ctrl-Page Up</i> - в начало текста;</P>
<P><I>Ctrl-Page Down</i> - в конец текста.</P>
<P>&nbsp;</P>
<P>&nbsp;<B>Команды редактирования</B></P>
<P><I>Backspace</i> - стирает символ слева от курсора;</P>
<P><I>Delete </i>- стирает символ, на который показывает
 курсор;</P>
<P><I>Ctrl-Y</i>- стирает строку с курсором;</P>
<P><I>Enter</i> - вставляет новую строку, разрезает старую;
 </P>
<P><I>Ctrl-Q L</i> - восстанавливает измененную строку (действует,
 если курсор не </P>
<P>покидал строку после ее изменения).&nbsp;</P>
<P>&nbsp;</P>
<P><b>Работа с блоком</b></P>
<P><I>Ctrl-K В </i>- начинает выделение блока;</P>
<P><I>Ctrl-K K</i>- заканчивает выделение блока;</P>
<P><I>Ctrl-K Y</i> - уничтожает выделенный блок;</P>
<P><I>Ctrl-K С</i> - копирует блок;</P>
<P><I>Ctrl-K V</i> - перемещает блок на новое место;</P>
<P><I>Ctrl-K W</i> - записывает блок в файл;</P>
<P><I>Ctrl-K R</i> - читает блок из файла;</P>
<P><I>Ctrl-K P</i> - печатает блок.</P>
<P>&nbsp;</P>
<P><b>Основные приемы работы в среде Турбо Паскаля </b></P>
<P>&nbsp;</P>
<P><b>Работа с файлами</b></P>
<P>Как уже говорилось, сразу после запуска Турбо Паскаля
 среда переходит в режим редактирования текста, в котором можно подготовить
 новую программу или исправить существующую.</P>
<P>Основной формой хранения текстов программ вне среды являются
 файлы. После завершения работы с Турбо Паскалем можно сохранить текст
 новой программы в дисковом файле с тем, чтобы использовать его в следующий
 раз. Для обмена данными между дисковыми файлами и редактором среды предназначены
 клавиши F2 (запись в файл) и F3 (чтение из файла). Если Вы создаете новую
 программу, то среда еще не знает имя того файла, в который Вы захотите
 поместить текст этой программы, и поэтому она присваивает ей стандартное
 имя <I>NONAME00.PAS</I> (<I>NO NAME</I> - нет имени). Для сохранения текста
 программы в файле нужно нажать F2. В этот момент среда проверит имя программы
 и, если это стандартное имя <I>NONAME,</I> спросит, нужно ли его изменять:
 на экране появится небольшое окно запроса с надписью </P>
<P>Save File as&nbsp;</P>
<P>(Сохранить в файле с именем...) </P>
<P>Ниже надписи располагается поле для ввода имени файла,
 в котором можно написать нужное имя (без расширения) и нажать <I>Enter</I>
 - текст будет сохранен в файле. Если в имени опущено расширение, среда
 присвоит файлу стандартное расширение <I>PAS</I>. Если Вы захотите завершить
 работу с Турбо Паскалем, а в редакторе остался не сохраненный в файле
 текст, на экране появится окно с запросом </P>
<P>NONAMEOO.PAS has been modified.Save? </P>
<P>(Файл NONAME00.PAS был изменен. Сохранить?) </P>
<P>В ответ следует нажать Y(<I>Yes </I>- да), если необходимо
 сохранить текст в файле, или N(<I>No</I> - нет), если сохранять текст
 не нужно.</P>
<P>&nbsp;</P>
<P><b>Прогон и отладка программы </b></P>
<P>После подготовки текста программы можно попытаться исполнить
 ее, т.е. откомпилировать программу, связать ее (если это необходимо) с
 библиотекой стандартных процедур и функций, загрузить в оперативную память
 и передать ей управление. Вся эта последовательность действий называется
 прогоном программы и реализуется командой <I>Ctrl-F9.</I></P>
 <P>Если в программе нет синтаксических ошибок, то все действия
 выполняются последовательно одно за другим, при этом в небольшом окне
 сообщается о количестве откомпилированных строк и объеме доступной оперативной
 памяти. Перед передачей управления загруженной программе среда очищает
 экран (точнее, выводит на экран окно прогона программы), а после завершения
 работы программы вновь берет управление компьютером на себя и восстанавливает
 на экране окно редактора.</P>
 <P>Если на каком-либо этапе среда обнаружит ошибку, она
 прекращает дальнейшие действия, восстанавливает окно редактора и помещает
 курсор на ту строку программы, при компиляции или исполнении которой обнаружена
 ошибка. При этом в верхней строке редактора появляется диагностическое
 сообщение о причине ошибки. Все это позволяет очень быстро отладить программу,
 т.е. устранить в ней синтаксические ошибки и убедиться в правильности
 ее работы. Если ошибка возникла на этапе прогона программы, простое указание
 того места, где она обнаружена, может не дать нужной информации, так как
 ошибка может быть следствием неправильной подготовки данных в предыдущих
 операторах программы. Например, если ошибка возникла в результате извлечения
 квадратного корня из отрицательного числа, будет указан оператор, в котором
 осуществляется извлечение корня, хотя ясно, что первопричину ошибки надо
 искать где-то раньше, там, где соответствующей переменной присваивается
 отрицательное значение. В таких ситуациях обычно прибегают к пошаговому
 исполнению программы с помощью команд, связанных с клавишами F4, F7 и
 F8. Пока еще не накоплен достаточный опыт отладки, можно воспользоваться
 одной клавишей F7, после нажатия на которую среда осуществит компиляцию,
 компоновку (связь с библиотекой стандартных процедур и функций) и загрузку
 программы, а затем остановит прогон перед исполнением первого оператора.
 Строка программы, содержащая этот оператор, будет выделена на экране указателем
 (цветом). Теперь каждое новое нажатие F7 будет вызывать исполнение всех
 операций, запрограммированных в текущей строке, и смещение указателя к
 следующей строке программы. В подозрительном месте программы можно просмотреть
 текущее значение переменной или выражения. Для этого нужно установить
 курсор в то место строки, где находится имя интересующей Вас переменной,
 и нажать <I>Ctrl-F4</I>. На экране появится диалоговое окно, состоящее
 из трех полей (в верхнем поле будет стоять имя переменной, два других
 поля будут пустыми). Нажмите <I>Enter</I>, чтобы в среднем поле получить
 текущее значение переменной. Если перед нажатием <I>Ctrl-F4 </I>курсор
 стоял на пустом участке строки или указывал на имя другой переменной,
 верхнее поле диалогового окна также будет пустым или содержать имя этой
 другой переменной. В этом случае следует ввести с помощью клавиатуры имя
 нужной переменной и нажать <I>Enter</I>. Кстати, таким образом можно вводить
 не только имена прослеживаемых переменных, но и выражения - среда вычислит
 и покажет значение введенного выражения.</P><P>&nbsp;</P>
<P><b>Справочная служба Турбо Паскаля </b></P>
<P>Неотъемлемой составной частью среды Турбо Паскаля является
 встроенная справочная служба. Если Вы достаточно хорошо владеете английским
 языком, у Вас не будет проблем при работе с Турбо Паскалем: в затруднительной
 ситуации достаточно нажать F1 и на экране появится необходимая справка.
 Эта справка зависит от текущего состояния среды, поэтому справочную службу
 называют контекстно-чувствительной. Например, если нажать F1 в момент,
 когда среда обнаружила ошибку в программе, в справке будут сообщены дополнительные
 сведения о причинах ошибки и даны рекомендации по ее устранению.</P>
<P>Существуют четыре способа обращения к справочной службе
 непосредственно из окна редактора: </P>
<P><I>F1</i> - получение контекстно-зависимой справки;</P>
<P><I>Shift-F1</i> - выбор справки из списка доступных справочных
 сообщений;</P>
<P><I>Ctrl-F1</i> - получение справки о нужной стандартной
 процедуре, функции, о стандартной константе или переменной;</P>
<P><I>Alt-F1</i> - получение предыдущей справки.</P>
<P>По команде <I>Shift-F1</I> на экране появится окно, содержащее
 упорядоченный по алфавиту список стандартных процедур, функций, типов,
 констант и переменных, для которых можно получить справочную информацию.
</P>
<P>Эту же справку можно получить и по-другому. Напечатайте
 на экране имя процедуры (функции, типа и т.д.) или подведите курсор к
 имеющемуся в тексте стандартному имени и нажмите <I>Ctrl-F1</I>. Среда
 проанализирует ближайшее окружение курсора, выделит имя и даст нужную
 справку.</P>
<P>Во многих случаях справка содержит небольшой пример,
 иллюстрирующий соответствующие возможности Турбо Паскаля. Не торопитесь
 запоминать его или записывать на листе бумаги: его можно “вырезать” из
 справки и перенести в окно редактора. Для этого после вызова справки нажмите
 <I>Alt-E</I>, выберите в появившемся дополнительном меню продолжение <I>Copy
 examples</I> (копировать примеры) и нажмите <I>Enter</I> -текст примера
 скопируется во внутренний буфер редактора. Для извлечения пример из буфера:
 нажмите <I>Esc</I>, чтобы выйти из справочной службы; подведите курсор
 к свободной строке в окне редактора; нажмите <I>Shift-Insert</I> (копирование
 содержимого буфера в текст программы) и <I>Ctrl-K H</I>, чтобы убрать
 выделение скопированного текста цветом.</P>
<P>&nbsp;</P>
<P><b><u><a name="10_2"></a>10.2 Ваша первая программа </u></b></P>
<P>Для знакомства с языком Турбо Паскаля попробуем составить
 несложную программу, осуществляющую вывод какого-либо сообщения на экран
 ПК. Пусть это будет фраза “Я программирую на Турбо Паскале”. Вот возможный
 вариант такой программы: </P>
 <P><b>Пример 1 </b></P>
<P class=code>Program My_First_Program;</P>
<P class=code>const</P>
<P class=code>Text = 'Я программирую на Турбо Паскале';&nbsp;</P>
<P class=code>begin </P>
<P class=code>WriteLn(Text);</P>
<P><span class=code>end.</span></P>
<P>&nbsp;</P>
<P>Прежде всего проанализируем форму представления текста.
 В программе шесть строк. Строки программы обычно выделяют некоторые смысловые
 фрагменты текста и могут не связываться с конкретными действиями в программе:
 расположение текста программы по строкам - дело вкуса программиста, а
 не требование синтаксиса языка. Ту же программу можно было бы написать,
 например, так: </P>
<P class=code>Program My_First_Program; const Text = </P>
<P><span class=code>'Я программирую на Турбо Паскале';begin
 WriteLn(Text); end.</span></P>
<P>В отличие от некоторых других языков программирования
 пробел в языке Турбо Паскаль используется как разделитель отдельных конструкций
 языка, поэтому программа </P>
<P class=code>PROGRAMMy_First_Program;constText= </P>
<P><span class=code>'Я программирую на Турбо Паскале';BEGINWriteLn(Text);end.
</span></P>
<P>будет неверной.</P>
<P>В Турбо Паскале игнорируется различие в высоте букв (заглавные
 или строчные), если только это не связано с текстовыми константами. Начало
 программы могло бы, например, выглядеть так: </P>
<P class=code>program my_first_program;&nbsp;</P>
 <P>Теперь о смысле отдельных строк. Первая строка </P>
<P class=code>Program My_First_Program;</P>
 <P>начинается словом Program и содержит объявление имени
 программы. Слово Program зарезервировано в Турбо Паскале, т.е. не может
 использоваться ни в каких иных целях, кроме как для объявления имени программы.
 В Турбо Паскале имеется множество зарезервированных слов. Любое из них
 нельзя использовать в качестве идентификатора (имени) какого-либо объекта
 программы - переменной, константы и т.д. Замечу, что редактор среды Турбо
 Паскаля обычно выделяет зарезервированные слова цветом. Поскольку имя
 программы никак в дальнейшем не используется, требование его объявления
 кажется излишним. В Турбо Паскале можно опускать объявление имени оператором
 Program без каких-либо последствий для программы.</P>
<P>В рассматриваемом примере имя My_First_Program есть не
 что иное, как английская фраза “Моя Первая Программа”, но только написанная
 без пробелов - пробел является разделителем и не может использоваться
 произвольно (вместо пробелов в идентификаторах разрешается использовать
 символ подчеркивания).</P>
<P>Первая строка заканчивается особым разделителем - точкой
 с запятой. Этот разделитель в языке Турбо Паскаль отмечает конец оператора
 или описания. Использование особого разделителя позволяет располагать
 несколько операторов на одной строке.</P>
 <P>Вторая строка </P>
 <P>const </P>
 <P>содержит единственное зарезервированное слово const,
 означающее, что далее будут описаны одна или несколько констант (CONSTants
 - <I>константы</I>). Константами в языке считаются такие объекты программы,
 которые не могут изменять своего значения. В отличие от многих других
 языков программирования, константа в Турбо Паскале может иметь собственное
 имя, что соответствует принятой в научных и инженерных расчетах практике
 именования часто используемых констант. Например, со школы мы помним о
 существовании константы п—3.14159265. При обработке программы имя константы
 pi будет заменяться компилятором на ее значение.Описать константу в Турбо
 Паскале - значит указать ее имя и значение. Такое указание содержится
 в третьей строке</P>
<P class=code>Text = 'Я программирую на Турбо Паскале';</P>
<P>в которой константе с именем Text присваивается в качестве
 значения строка символов “Я программирую на Турбо Паскале”.</P>
<P>В Турбо Паскале могут использоваться константы разного
 типа - целые или вещественные числа, символы, строки символов, массивы
 и т.д. Признаком того, что Text является константой типа строка символов,
 служат два апострофа, обрамляющих строку, причем сами апострофы этой строке
 не принадлежат, а лишь указывают компилятору на то, что все заключенные
 в них символы следует рассматривать как единое целое - текстовую константу.
 Если понадобится включить сам апостроф в текстовую константу, достаточно
 его написать дважды подряд. Например, описание </P>
<P class=code>Text = 'Турбо' 'Паскаль';</P>
 <P>создаст константу со значением </P>
 <P>Турбо'Паскаль </P>
 <P>Все три первые строки не связаны с какими-либо конкретными
 действиями при работе программы. Они сообщают компилятору некоторые сведения
 о самой программе и использующихся в ней объектах. Эта часть программы
 называется разделом описаний. Зарезервированное слово begin в четвертой
 строке сигнализирует компилятору о начале другой части программы - раздела
 операторов. В нашем примере этот раздел содержит оператор </P>
<P class=code>WriteLn(Text);</P>
 <P>который, собственно, и выводит сообщение на экран компьютера.
 </P>
 <P>Завершает всю программу зарезервированное слово end с
 точкой. Точка оповещает компилятор о конце текста программы. За сочетанием
 end. можно размещать какой угодно текст - он не будет обрабатываться компилятором.
</P>
<P>Перед тем как попробовать откомпилировать и исполнить
 нашу программу, обсудим ее единственный исполняемый оператор </P>
<P class=code>WriteLn(Text);</P>
<P>Процедура WriteLn относится к стандартным или встроенным
 процедурам Турбо Паскаля. Стандартная процедура не нуждается в предварительном
 описании, она доступна любой программе, в которой содержится обращение
 к ней. Процедура WriteLn - одна из немногих процедур Турбо Паскаля, при
 обращении к которым допускается использование произвольного числа параметров.
 Параметры передаются процедуре в виде списка, располагающегося в круглых
 скобках сразу за именем процедуры. В нашем примере процедуре передается
 единственный параметр -константа Text. Как мы уже увидели ранее (см. п.9.2),
 самым первым параметром при обращении к процедуре WriteLn можно указать
 адрес приемника информации - устройство или дисковый файл, в который направляется
 вывод. Таким способом программист может легко переадресовать вывод данных.
 Если, как это сделано в нашем примере, адрес вывода не указан, вывод направляется
 на экран дисплея.</P>
<P>Анализируя всю программу в целом, мы обнаружим, что четыре
 использовавшихся в ней слова (Program, const, begin и end) являются зарезервированными.
 Два слова My_First_Program и Text служат идентификаторами (именами) некоторых
 объектов программы. Программист может использовать в качестве идентификаторов
 любые последовательности символов, которые удовлетворяют следующим ограничениям:
</P>
<UL>
<LI>идентификатор может состоять из букв латинского алфавита, цифр, знака
 подчеркивания; никакие другие символы в идентификаторе недопустимы;
</LI>
<LI>идентификатор не может начинаться с цифры;</LI>
<LI>идентификатор не может совпадать ни с одним из зарезервированных слов;
</LI>
<LI>&nbsp;длина идентификатора может быть произвольной, но значащими считаются
 первые 63 символа.</LI>
</UL>
<P>Как и всюду в программе, в идентификаторах игнорируется
 разница в высоте букв, поэтому, например, идентификаторы Text, text и
 TEXT с точки зрения компилятора идентичны.</P>
<P>Теперь попробуйте выполнить программу. Для этого после
 набора ее текста нажмите <I>Ctrl-F9</I>. Если Вы не ошиблись при вводе
 текста, то спустя несколько секунд заметите быструю смену изображений
 на экране: сразу после загрузки программы Турбо Паскаль очищает экран,
 предоставляя его в распоряжение работающей программы пользователя. Такой
 экран называется окном программы. После завершения прогона (работа программы
 часто называется ее прогоном) на экране вновь появится окно редактора
 с текстом программы. Если Вы не успели разглядеть изображение окна программы,
 нажмите <I>Alt-F5</I>. После нажатия на любую клавишу среда вернет экран
 в режим воспроизведения окна редактора.</P>
<P>Перед тем, как двигаться дальше, полезно подробнее ознакомиться
 с некоторыми возможностями среды Турбо Паскаля. Нажмите клавишу <I>F10</I>,
 чтобы перейти к режиму выбора из главного меню, подведите указатель к
 опции <I>Window </I>(окно) (это для версии TP6.0, а для версии 7.0 - подведите
 указатель к опции<I> Debug </I>(отладка))<I></I>и нажмите клавишу <I>Enter</I>
 - на экране раскроется меню второго уровня, связанное с этой опцией. Новое
 меню как бы “выпало” из верхней строки, поэтому такое меню часто называют
 выпадающим. Отыщите в новом меню опцию <I>Output</I> (вывод программы),
 подведите к ней указатель и нажмите клавишу <I>Enter</I> еще раз. На экране
 вновь появится окно программы, но оно уже не будет исчезать после нажатия
 на любую клавишу - экран будет связан с этим окном постоянно. Теперь добьемся
 того, чтобы на экране демонстрировались два окна одновременно: вновь нажмите
 клавишу <I>F10</I>, выберите <I>Window</I>, нажмите клавишу <I>Enter</I>,
 подведите указатель к опции <I>Tilе</I>(черепица) и нажмите клавишу <I>Enter</I>
 еще раз. Если все сделано правильно, экран приобретет вид, показанный
 на рис. 2.</P>
<P>&nbsp;</P>
<P><img src="img/tp2.gif" width="550" height="302"></P>
<P><I><B>Рис. 2 </b> Вид экрана с окнами редактора и программы</i></P>
<P>&nbsp;</P>
<P>Двойная рамка, очерчивающая окно программы, свидетельствует
 о том, что именно это окно активно в данный момент. Сделаем активным окно
 редактора: нажмем клавишу <I>Alt</I> и, не отпуская ее, - клавишу с цифрой
 1 (окно редактора имеет номер 1, окно программы - номер 2, см. верхние
 правые углы рамок на рис. 2). Теперь все готово к дальнейшим экспериментам
 с программой.</P>
<P>Попробуем изменить выводимый на экран текст. Например,
 уберем в конце третьей строки точку с запятой и отредактируем ее таким
 образом: </P>
<P>Text = 'я учусь программировать на турбо паскале' </P>
<P>Если Вы запустите программу вновь, нажав клавиши Ctrl-F9,
 компилятор сообщит: </P>
<P>Error 85: ";" expected. (Ошибка 85: Отсутствует ";".),
</P>
<P>а редактор установит курсор на первый символ слова begin,
 показывая то место, где при разборе текста обнаружена ошибка (разделитель
 “;” может отделять от конца оператора сколько угодно пробелов; компилятор
 пропускает эти пробелы в поисках разделителя до тех пор, пока не обнаружит
 зарезервированное слово, - вот почему курсор стоит не в конце строки с
 объявлением константы, а перед словом begin). Исправьте программу - поставьте
 в конце третьей строки разделитель “;” и вновь запустите счет. На этот
 раз все пройдет нормально, но вывод программы изменится, и в окне программы
 появится текст </P>
 <P>я учусь программировать на турбо паскале </P>
 <P>Этот текст строго соответствует заданному в текстовой
 константе набору символов, поэтому в нем отсутствуют прописные буквы.
 </P>
<P>&nbsp;</P><P>&nbsp;</P>
 </td>
</TR>
</table>
<hr>
<div align=center><font size=2 face=Arial color="#0000FF"><a href="lec9.htm">назад</a>
 | <a href="index_lec.htm">оглавление</a> | <a href="pril1.htm"> вперёд</a></font></div>
</BODY>
</HTML>
