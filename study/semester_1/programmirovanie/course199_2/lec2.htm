<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE></TITLE>
<style type="text/css">
p {
margin:0cm;
margin-bottom:.0001pt;
text-align:justify;
text-indent:35.45pt;
mso-pagination:widow-orphan;
font-size:12.0pt;
font-family:"arial";
mso-fareast-font-family:"arial";
}
.code{font-family:"Courier New";font-size:10pt}
</style>
</HEAD>
<BODY>
<basefont face=arial size=3>
<B></B>
<table border="0" cellpadding="0" cellspacing="0" width="100%"
 height="31">
<TR>
 <TD width="100%" bgcolor="#000000"><div align=right><font color="#FFFFFF" size=3 face=Arial><b>ѕрограммирование
 на €зыках высокого уровн€. язык программировани€ ѕаскаль&nbsp;</b></font></div></td>
</TR>
</table>
<table border="0" cellpadding="2" cellspacing="0" width="100%" height="35">
<TR>
 <TD width="486" bgcolor=gray height="26">
 <p align=right>&nbsp;</p>
 </td>
 <TD width="230" bgcolor="#EEE0BF" height="26"><p align=center><font size=2 face=Arial color="#0000FF"><a href="P6.htm">
</a><a href="lec1.htm">назад</a> | <a href="index_lec.htm">оглавление</a>
| <a href="lec3.htm"> вперЄд</a></font></p>
 </td>
 <TD width="43" height="26">&nbsp;</td>
</TR>
</table><br>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<TR>
 <TD><div align=center></div>
<P><strong>2. ѕростые типы данных</strong></P>
<P>&nbsp;</P>
<P></P>
<P><strong>2.1 ÷елые типы</strong></P>
<P></P>
<P>Ёти типы обозначают множества целых чисел в различных
 диапазонах. «начени€ целого типа могут задаватьс€ в дес€тичном, например,
 5; -10, или шестнадцатеричном виде (шестнадцатеричном константы начинаютс€
 со знака $), например, $1A; $FFFF.</P>
<P>&nbsp;</P>
<P></P>
 <P ALIGN=center>
 <CENTER>
 <TABLE BORDER CELLSPACING=1 CELLPADDING=1 WIDTH=535>
<TR>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center><b>“ип</b></div></TD>
 <TD WIDTH="34%" VALIGN=MIDDLE><div align=center><b>–азмер в байтах</b></div></TD>
 <TD WIDTH="45%" VALIGN=MIDDLE><div align=center><b>ƒиапазон допустимых
 значений</b></div></TD>
</TR>
<TR>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>Shortint</div></TD>
 <TD WIDTH="34%" VALIGN=MIDDLE><div align=center>1</div></TD>
 <TD WIDTH="45%" VALIGN=MIDDLE><div align=center>-128Е127 (-2<SUP>7</SUP>Е2<SUP>7</SUP>-1)</div></TD>
</TR>
<TR>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>Integer</div></TD>
 <TD WIDTH="34%" VALIGN=MIDDLE><div align=center>2</div></TD>
 <TD WIDTH="45%" VALIGN=MIDDLE><div align=center>-32768Е32767
 (-2<SUP>15</SUP>Е2<SUP>15</SUP>-1)</div></TD>
</TR>
<TR>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>Longint</div></TD>
 <TD WIDTH="34%" VALIGN=MIDDLE><div align=center>4</div></TD>
 <TD WIDTH="45%" VALIGN=MIDDLE><div align=center>-2<SUP>31</SUP>Е2<SUP>31</SUP>-1</div></TD>
</TR>
<TR>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>Byte</div></TD>
 <TD WIDTH="34%" VALIGN=MIDDLE><div align=center>1</div></TD>
 <TD WIDTH="45%" VALIGN=MIDDLE><div align=center>0Е255 (0Е2<SUP>8</SUP>-1)</div></TD>
</TR>
<TR>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>Word</div></TD>
 <TD WIDTH="34%" VALIGN=MIDDLE><div align=center>2</div></TD>
 <TD WIDTH="45%" VALIGN=MIDDLE><div align=center>0Е65535 (0Е2<SUP>16</SUP>-1)</div></TD>
</TR>
 </TABLE>
<P>&nbsp;</p></CENTER>
<P></P>
<P></P>
<P>Ќад целыми числами допустимы <I><U>следующие операции</u></I>:</P>
 <OL>
<P>
 <LI>4 арифметических операции:</LI>
<P></P>
<P><B>+</b> сложение<B>* </B>умножениеb:=a*b;</P>
<P><B>-</b> вычитание<B>/</B> делениеc:=10/2-b;</P>
<P>
 <LI>2 дополнительных операции:</LI>
<P></P>
<P><B>div</b> Ц деление нацелоb:=10 div 3 -&gt;
 b=3; p:=32 div 5 -&gt; p=6</P>
<P><B>mod </b>Ц остаток от делени€b:=10 mod 3 -&gt;
 b=1; p:=32 mod 5 -&gt; p=2</P>
<P>
 <LI>операции сравнени€:<br>
 <DIR><b>&lt;, &gt;, &lt;=, &gt;=, =, &lt;&gt;</b></DIR></LI>
 </OL>

<P>&nbsp;</P>
<P><strong><a name="2_2"></a>2.2 ¬ещественные типы</strong></P>
<P>&nbsp;</P>
<P>√руппа вещественных типов обозначает множества вещественных значений
 в различных диапазонах. ¬ещественные числа могут задаватьс€ в форме с
 фиксированной точкой (например, 3.14159265; Ц10.2) или с плавающей точкой
 (например, 1.2≈Ц2 = 1.2&#215; 10<SUP>-2</SUP>; 2.1234≈15 = 2.1234&#215;
 10<SUP>15</SUP>).</P>
<P>&nbsp;</P>
 <P ALIGN=center>
 <CENTER>
 <TABLE BORDER CELLSPACING=1 CELLPADDING=1 WIDTH=487>
<TR>
 <TD WIDTH="14%" VALIGN=MIDDLE><div align=center><b>“ип</b></div></TD>
 <TD WIDTH="27%" VALIGN=MIDDLE><div align=center><b>–азмер в байтах</b></div></TD>
 <TD WIDTH="37%" VALIGN=MIDDLE><div align=center><b>„исло значащих
 цифр</b></div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center><b>ƒиапазон</b></div></TD>
</TR>
<TR>
 <TD WIDTH="14%" VALIGN=MIDDLE><div align=center>Real</div></TD>
 <TD WIDTH="27%" VALIGN=MIDDLE><div align=center>6</div></TD>
 <TD WIDTH="37%" VALIGN=MIDDLE><div align=center>11-12</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>10<SUP>-39</SUP>Е10<SUP>38</SUP></div></TD>
</TR>
<TR>
 <TD WIDTH="14%" VALIGN=MIDDLE><div align=center>Single</div></TD>
 <TD WIDTH="27%" VALIGN=MIDDLE><div align=center>4</div></TD>
 <TD WIDTH="37%" VALIGN=MIDDLE><div align=center>7-8</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>10<SUP>-45</SUP>Е10<SUP>38</SUP></div></TD>
</TR>
<TR>
 <TD WIDTH="14%" VALIGN=MIDDLE><div align=center>Double</div></TD>
 <TD WIDTH="27%" VALIGN=MIDDLE><div align=center>8</div></TD>
 <TD WIDTH="37%" VALIGN=MIDDLE><div align=center>15-16</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>10<SUP>-324</SUP>Е10<SUP>308</SUP></div></TD>
</TR>
 </TABLE>
 </CENTER>
<P>ќперации над переменными вещественного типа:</P>
 <OL>
<P>
 <LI>4 арифметических операции:<B>+,</B><B>*, -, </B><B>/</b></LI>
<P></P>
<P>
 <LI>операции сравнени€:</LI>
<P></P>
 </OL>
 <DIR>
<P><b>&lt;, &gt;, &lt;=, &gt;=, =, &lt;&gt;</b></P>
<P></P>
 </DIR>
<P><u>“ипы результатов операций</u></P>
<P>&nbsp;</p>
 <table width=535 border align=center cellpadding=1 cellspacing=1>
<TR>
 <TD width="25%" valign=MIDDLE><b>ќпераци€</b></td>
 <TD width="37%" valign=MIDDLE><b>“ипы операндов</b></td>
 <TD width="38%" valign=MIDDLE><b>“ип результата</b></td>
</TR>
<TR>
 <TD width="25%" valign=MIDDLE> +, *, -</td>
 <TD width="37%" valign=MIDDLE> ÷елые.’от€ бы один вещественный</td>
 <TD width="38%" valign=MIDDLE> ÷елый.¬ещественный</td>
</TR>
<TR>
 <TD width="25%" valign=MIDDLE> /</td>
 <TD width="37%" valign=MIDDLE> ÷елые, вещественные</td>
 <TD width="38%" valign=MIDDLE> ¬ещественный</td>
</TR>
<TR>
 <TD width="25%" valign=MIDDLE> div, mod</td>
 <TD width="37%" valign=MIDDLE> ÷елые</td>
 <TD width="38%" valign=MIDDLE> ÷елые</td>
</TR>
<TR>
 <TD width="25%" valign=MIDDLE> &lt;, &gt;, =, &lt;&gt;, &lt;=, &gt;=</td>
 <TD width="37%" valign=MIDDLE> ÷елые, вещественные</td>
 <TD width="38%" valign=MIDDLE> Ћогический (п.2.4.)</td>
</TR>
 </table>
<P>&nbsp;</P><P>&nbsp;</P>
<P>&nbsp;</P>
<P><b><a name="2_3"></a>2.3 Cимвольный тип данных</b></P>
<P>&nbsp;</P>
<P>Char1 байт 256 значений</P>
<P>«начени€ми этого типа €вл€ютс€ символы из набора ASCII
 Ц американского стандартного кода дл€ обмена информацией.</P>
<P> аждый символ имеет свой код от 0 до 255. —имволы с кодами
 0-127 Ц стандартные символы ASCII:</P>
<P>0-31 Ц управл€ющие символы;</P>
<P>32-47 Ц знаки препинани€;</P>
<P>48-57 Ц цифры;</P>
<P>58-127 Ц латинские буквы.</P>
<P>–асширение кода ASCII: 128-255 Ц русские буквы, псевдографика
 (&#9474;, &#9484;, &#9488;, &#9492;, &#9496;Е).</P>
<P>—имволы, имеющие графическое представление, заключаютс€
 в кавычки: —=Т*Т. ƒл€ символов, не имеющих графического представлени€,
 используетс€ знак #, после которого записываетс€ код символа:</P>
<P>&nbsp;</P>
<P><u>ѕример:</u></P>
<P>#10перевод строкиVarc: char;</P>
<P>#13переход к началу строкиx: integer;</P>
<P>#7звуковой сигнал begin</P>
<P>#8возврат на символ c:=Т*Т; x:=10;</P>
<P>Writeln(#7,a); writeln (#7,c,x,c);</P>
<P>Writeln(#10,x);end.</P>
<P></P>
<P>ƒл€ переменных символьного типа допустимы <I>операции
 сравнени€</I>, при этом сравниваютс€ коды символов:</P>
<P>С Т&lt;Т10Т</P>
<P>С0Т&lt;Т9Т</P>
<P>СaТ&gt;ТAТ</P>
<P>СAТ&lt;ТZТ</P>
<P>СaТ&gt;ТZТ</P>
<P>СaТ&lt;ТzТ</P>
<P> оды прописных латинских букв: A - 65; B Ц 66; C Ц 67
 и т.д.</P>
<P> оды строчных латинских букв: a - 97; b Ц 98; c Ц 99
 и т.д.</P>
<P>ƒл€ преобразовани€ символа в число, равное коду символа,
 и наоборот, используютс€ следующие функции:</P>
<P><B>chr(x)</b> Ц преобразование ASCII-кода в символ; аргумент
 Ц целый 0-255;</P>
<P><B>ord(x)</b> Ц преобразование символа в целое число.</P>
<P>&nbsp;</P>
<P><U>ѕример:</U></p>
 <TABLE BORDER CELLSPACING=1 CELLPADDING=1 WIDTH=475>
<TR>
 <TD WIDTH="71%" VALIGN=TOP><P>&nbsp;</P>
 <P>Varn1,n2: integer;</P>
 <P>c1,c2: char;</P>
 <P>begin</P>
 <P> c1:=ТDТ; n1:=ord(c1); writeln(Сn1 = Т, n1);</P>
 <P> n2:=66; c2:=chr(n2); writeln(Сc2 = Т, c2);</P>
 <P>end.</P>
 <P></P>
 <P>&nbsp;</TD>
 <TD WIDTH="29%" VALIGN=TOP><P>&nbsp;</P><P>&nbsp;</P>
 <P>на экране:</P>
 <P></P>
 <P>n1 = 68</P>
 <P>n2 = B</TD>
</TR>
 </TABLE>
<P>&nbsp;</P><P>&nbsp;</P>
<P><u><b><a name="2_4"></a>2.4 Ћогический тип данных</b></u></p>
<P>&nbsp;</P>
<P>ќписание: varn: boolean;</P>
<P>ƒанные логического типа boolean могут принимать только
 два значени€: true (истина) и false (ложь). ƒл€ значений логического типа
 допустимы <I>операции сравнени€</I>, причем <I>true&gt;false</I>.“акже
 примен€ютс€ 4 <I>логических операции</I>:</P>
<P><B>and</b>логическое умножение</P>
<P><B>or</b>логическое сложение</P>
<P><B>xor</b>исключающее УилиФ</P>
<P><B>not</b>отрицание</P>
<P>ѕравила выполнени€ логических операций определ€ютс€ с
 помощью следующих таблиц истинности:</P>
<P>&nbsp;</p>
 <TABLE WIDTH=115 BORDER align=center CELLPADDING=1 CELLSPACING=1>
<TR>
 <TD WIDTH="48%" VALIGN=MIDDLE><div align=center><b>X</b></div></TD>
 <TD WIDTH="52%" VALIGN=MIDDLE><div align=center><b>Not X</b></div></TD>
</TR>
<TR>
 <TD WIDTH="48%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="52%" VALIGN=MIDDLE><div align=center>false</div></TD>
</TR>
<TR>
 <TD WIDTH="48%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="52%" VALIGN=MIDDLE><div align=center>true</div></TD>
</TR>
 </TABLE>
<P>&nbsp;</p><TABLE BORDER CELLSPACING=1 CELLPADDING=1 WIDTH=379 ALIGN=center HSPACE=12>
<TR>
 <TD WIDTH="18%" VALIGN=MIDDLE><div align=center><b>X</b></div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center><b>Y</b></div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center><b>X and Y</b></div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center><b>X or Y</b></div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center><b>X xor Y</b></div></TD>
</TR>
<TR>
 <TD WIDTH="18%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>false</div></TD>
</TR>
<TR>
 <TD WIDTH="18%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>true</div></TD>
</TR>
<TR>
 <TD WIDTH="18%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>true</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>true</div></TD>
</TR>
<TR>
 <TD WIDTH="18%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="19%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>false</div></TD>
 <TD WIDTH="22%" VALIGN=MIDDLE><div align=center>false</div></TD>
</TR>
 </TABLE>
<P></P>
<P>&nbsp;</p>
<P><u>ѕример 1:</u></P>
<P>not (5&gt;2) = false</P>
<P>(5&gt;2) and (3&lt;10) = true</P>
<P>(8&lt;&gt;9) or (4&gt;5) = true</P>
<P>not (5=2) xor (3&gt;2) = false</P>
<P>&nbsp;</P>
<P><u>ѕример 2:</u></P>
<P>&nbsp;</p>
 <TABLE BORDER CELLSPACING=1 CELLPADDING=1 WIDTH=456>
<TR>
 <TD WIDTH="50%" VALIGN=TOP><P> vartest: boolean;</P>
 <P>a, b: integer;</P>
 <P>begin</P>
 <P> writeln (С¬ведите а и bТ);</P>
 <P> readln (a,b);</P>
 <P> test:=a&gt;b;</P>
 <P> writeln (Са &gt; b - Т, test);</P>
 <P>end.</TD>
 <TD WIDTH="50%" VALIGN=TOP><P></P>
<P>&nbsp;</P>
 <P>ѕусть, например,<br>
 введены числа: 5 16</P>
 <P>тогда test:=5&gt;16;</P>
 <P>на экране: а &gt; b - False</TD>
</TR>
</TABLE>
<P>&nbsp;</p>
<P>ѕри сравнении данных типа BOOLEAN учитываетс€ внутреннее
 соглашение “урбо ѕаскал€, в соответствии с которым FALSE есть нулевой
 байт, a TRUE - байт с единицей в младшем разр€де. «аметим, что функци€
 ORD преобразует к целому не только символы, но и логические величины,
 поэтому </P>
<P>ord(false) = 0,</P>
<P>ord(true) = 1.</P>
<P>&nbsp;</P><P>&nbsp;</P>
<P></P>
<P><b><a name="2_5"></a><u>2.5 ќграниченные типы</u></b></P>
<P>&nbsp;</P>
<P>Ќа основе стандартных типов можно строить собственные
 типы, ограничива€ диапазон возможных значений: 1..10, -100..10, СaТ..ТzТ
 и т.п.</P>
<P>&nbsp;</P>
<P><u>ѕример:</u></P>
<P><span class=code>vara: 2..5;</span></P>
<P class=code>&nbsp;b: СaТ..ТzТ;</P>
<P class=code> begin</P>
<P class=code>&nbsp;a:=3;</P>
<P class=code>&nbsp;b:=0; {ошибка: несоответствие типов
 Ц переменной символьного типа присваиваетс€ целое число} </P>
<P class=code> &nbsp;a:=0; {ошибка: выход за границы диапазона
 2..5} </P>
<P class=code> end.</P>
<P>&nbsp;</P>
<P></P>
<P><b><u><a name="2_6"></a>2.6 ѕеречислимые типы</u></b></P>
<P>&nbsp;</P>
<P>ќбразуютс€ путем €вного перечислени€ всех возможных значений,
 задаваемых именами. Ќапример, дл€ программы управлени€ светофором, может
 быть определен следующий тип:</P>
<P></P>
<P>varsvet: (red, yellow,green);</P>
<P>oper: (plus, minus);</P>
<P></P>
<P>“ип boolean Ц частный случай перечислимого типа.</P>
<P>&nbsp;</P>
<P></P>
<P><b><u><a name="2_7"></a>2.7 ќписание типов</u></b></P>
<P>&nbsp;</P>
<P>Ќовые типы данных в ѕаскаль определ€ютс€ посредством
 описаний, начинающихс€ со слова TYPE. ќписание состоит из имени типа и
 значени€ типа, между которыми ставитс€ знак У=Ф.</P>
<P><u>ѕример:</u></P>
<P>Typedec=1..10;</P>
<P>abc=ТAТ..ТzТ;</P>
<P>int=integer;</P>
<P>&nbsp;</p>
<P ALIGN=center>
<CENTER>
<TABLE BORDER CELLSPACING=1 CELLPADDING=1 WIDTH=454>
<TR>
 <TD WIDTH="22%" VALIGN=TOP> vara: dec;b: abc;c: int;</TD>
 <TD WIDTH="78%" VALIGN=TOP> {в разделе описани€ переменных var можно
 использовать не только стандартные типы данных, но и новые типы,
 описанные программистом в разделе Type }</TD>
</TR>
</TABLE>
</CENTER>
<p>&nbsp;</p><p>&nbsp;</p>
<p><b><a name="2_8"></a>2.8 ѕреобразование типов</b></p>
<p>&nbsp;</p>
<P> ак уже говорилось, тип переменной позвол€ет не только
 устанавливать длину ее внутреннего представлени€, но и контролировать
 те действи€, которые выполн€ютс€ над ней в программе.  онтроль над использованием
 переменных еще на этапе компил€ции программы - важное преимущество “урбо
 ѕаскал€ перед другими €зыками программировани€, в которых допускаетс€
 автоматическое преобразование типов. ¬ “урбо ѕаскале почти невозможны
 не€вные (автоматические) преобразовани€ типов. »сключение сделано только
 в отношении констант и переменных типа INTEGER (целые), которые разрешаетс€
 использовать в выражени€х типа REAL (вещественные). ≈сли, например, переменные
 X и Y описаны следующим образом:</P>
<P>var х: integer;&nbsp;</P>
<P> у: Real;</P>
<P>то оператор</P>
<P>у:=х + 2;</P>
<P>будет синтаксически правильным: хот€ справа от знака
 присваивани€ стоит целочисленное выражение, а слева - вещественна€ переменна€,
 компил€тор сделает необходимые преобразовани€ автоматически. ¬ то же врем€
 оператор</P>
<P>х:=2.0;</P>
<P>будет неверным, так как автоматическое преобразование
 типа REAL (константа 2.0 содержит дес€тичную точку и, следовательно, принадлежит
 к типу REAL) в тип INTEGER в “урбо ѕаскале запрещено.</P>
<P>“аким образом, переменным можно присваивать значени€
 только своего типа; единственное исключение: переменна€ вещественного
 типа, а значение Ц целого (в этом случае целое число будет преобразовано
 в вещественное с дробной частью, равной 0).</P>
<P>–азумеетс€, запрет на автоматическое преобразование типов
 еще не означает, что в “урбо ѕаскале нет средств преобразовани€ данных.
 ќни, конечно же, есть, но их нужно использовать €вно. ƒл€ преобразовани€
 данных в €зыке существуют встроенные функции, которые получают в качестве
 параметра значение одного типа, а возвращают результат в виде значени€
 другого типа. ¬ частности, дл€ преобразовани€ REAL в INTEGER имеютс€ даже
 две встроенные функции такого рода: ROUND округл€ет REAL до ближайшего
 целого, a TRUNC усекает REAL путем отбрасывани€ дробной части (см. п.1.5).</P>
<P>Ќапример, ошибочным будет оператор </P>
<P>х := у/х;&nbsp;</P>
<P>но правильным </P>
<P>х := round(у/х);</P>
<P>(объ€влени€ переменных см. выше).</P>
<P>Ќапример, дл€ преобразовани€ данных типа CHAR (символ)
 в целое число предназначена функци€ ORD, обратное преобразование INTEGER
 в CHAR осуществл€ет функци€ CHR.</P>
<P>Ќаличие двух операций делени€ есть еще одно про€вление
 основополагающего принципа “урбо ѕаскал€: программист должен €вно подтверждать
 компил€тору, что он готов к возможным последстви€м преобразовани€ типов.
 ≈сли, например, в €зыке ‘ортран используетс€ выражение 1/2 , то результат
 этого выражени€ будет зависеть от того, переменной какого типа он будет
 присвоен: если N есть переменна€ целого типа, а ’- вещественного, то в
 программе на ‘ортране присваивани€</P>
<P>N = 1/2</P>
<P>X = 1/2</P>
<P>дадут значени€ 0 дл€ N и 0.5 дл€ X. ¬ “урбо ѕаскале такой
 двусмысленности нет: выражение 1/2 всегда имеет значение 0.5 и поэтому
 оператор</P>
<P>var N :integer;</P>
<P>begin</P>
<P>N := 1/2;</P>
<P>просто недопустим. ¬ то же врем€ допустимые в “урбо ѕаскале
 операторы: </P>
<P>&nbsp;var X : Real;</P>
<P> &nbsp;N: integer;</P>
<P>begin </P>
<P>&nbsp;N := 1 div 2;</P>
<P>&nbsp;X := 1 div 2;</P>
<P>», наконец, об операци€х отношени€ и логических операци€х.
 </P>
<P>Ќад данными типа REAL, INTEGER, CHAR, STRING определены
 следующие операции отношени€ (сравнени€): </P>
<P>= - равно;</P>
<P>&lt;&gt; - не равно;</P>
<P>&lt; - меньше;</P>
<P>&gt; - больше;</P>
<P>&lt;= - меньше или равно, </P>
<P>&gt;= - больше или равно.</P>
<P>¬ операци€х сравнени€ должны участвовать однотипные операнды.
 »сключение сделано оп€ть-таки в отношении REAL и INTEGER, которые могут
 сравниватьс€ друг с другом. –езультат применени€ операции отношени€ к
 любым операндам имеет тип BOOLEAN.</P>
<P>&nbsp;</P>
<P><b><u><a name="2_9"></a>2.9 ѕор€док вычислени€ выражений</u></b></P>
<P>&nbsp;</P>
<P>ѕор€док выполнени€ операций, вход€щих в выражени€, определ€етс€
 приоритетом операций. ƒл€ изменени€ пор€дка вычислени€ используютс€ круглые
 скобки.</P>
<P>ѕриоритет операций:</P>
<OL>
 <LI>вычислени€ в круглых скобках ( )</LI>
 <LI>вычислени€ значений функций</LI>
 <LI>унарные операции not</LI>
 <LI>операции типа умножение *, /, div, mod, and</LI>
 <LI>операции типа сложение +, -, or, xor</LI>
 <LI>операции сравнени€ &gt;, &lt;, &lt;=, &gt;=, =, &lt;&gt;</LI>
</OL>
<P>—ледует учесть, что в отличие от многих других €зыков
 программировани€ в “урбо ѕаскале логические операции имеют более высокий
 приоритет, чем операции отношени€. ¬ св€зи с этим, в сложных логических
 выражени€х обычно необходимо расставл€ть скобки. ≈сли, например, b и с
 имеют тип INTEGER , то выражение </P>
<P>а = b and с &lt; d </P>
<P>вызовет сообщение о синтаксической ошибке, так как сначала
 выполнитс€ операци€ b and с. ѕравильным будет выражение: </P>
<P>(а = b) and (с &lt; d) </P>
<P>&nbsp;</P><P>&nbsp;</P>
<P><u><strong><a name="z"></a>«адачи дл€ самоконтрол€</strong></u></P>
<P></P>
<P>2.1 ¬ычислить значени€ выражений</P>
<P>а) 20 div 6; б) 20 mod 6;</P>
<P>в) 2 div 5; г) 2 mod 5;</P>
<P>д) 4 div 0; е) 2.0 mod 2.</P>
<P><B>2.2.</b> а)ѕреобразовать арифметическое выражение
 в линейную форму записи, пригодную дл€ ввода в компьютер. »спользовать
 следующие обозначени€ операций: умножение *, деление /, возведение в степень
 ^, т.е. x<SUP>3</SUP> = x^3.</P>
<P><IMG SRC="img/Image1429.gif" WIDTH=388 HEIGHT=80></P>
<P>&nbsp;</P>
<P></P>
<P></P>
<P> б)ѕреобразовать линейную форму записи арифметического
 выражени€ в УмногоэтажноеФ представление, обычно используемое в математике:</P>
<P></P>
 <DIR>
<P>B:=(x/(y+3*(xЦy))^2Ц(y+9)^3/4)/(x^2*y)+9.5*y^2+y*(8+x/(2*y)).</P>
 </DIR>
<P><B>2.3</b>  акие операторы €вл€ютс€ ошибочными?</P>
<P>var x:integer;</P>
<P> y:real;</P>
<P>Begin</P>
<P>x:=3.4; y:=5;</P>
<P>x:=6; y:=2.5;</P>
<P>x:=y;</P>
<P>y:=x;</P>
<P>x:= 6/3;</P>
<P> x:= 6 div 3; y:= 6 div 2;</P>
<P><B>2.4</b> ¬ычислить значени€ выражений</P>
<P> а) not (6&gt;=4) and (2&lt;8)</P>
<P> б) ((5&gt;=9) or (4&gt;2)) and (6&lt;12)</P>
<p>&nbsp;</p><P>&nbsp;</P><P>&nbsp;</P></td>
</TR>
</table>
<hr>
<div align=center><font size=2 face=Arial color="#0000FF"><a href="lec1.htm">назад</a>
 | <a href="index_lec.htm">оглавление</a> | <a href="lec3.htm"> вперЄд</a></font></div>
</BODY>
</HTML>
